[
    {
        "id": "4bd885d3fe93cdd6",
        "type": "tab",
        "label": "Flow 1",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "872c6787997b744b",
        "type": "websocket-listener",
        "path": "/ws/accelerometer",
        "wholemsg": "false"
    },
    {
        "id": "a8650cc64c238153",
        "type": "ui_group",
        "name": "Valeurs brutes",
        "tab": "ec4d579f118bdbdd",
        "order": 1,
        "disp": true,
        "width": 9,
        "collapse": false,
        "className": ""
    },
    {
        "id": "ec4d579f118bdbdd",
        "type": "ui_tab",
        "name": "Capteurs",
        "icon": "dashboard",
        "disabled": false,
        "hidden": false
    },
    {
        "id": "f9c64ca2e62ea6f7",
        "type": "ui_base",
        "theme": {
            "name": "theme-light",
            "lightTheme": {
                "default": "#0094CE",
                "baseColor": "#0094CE",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "darkTheme": {
                "default": "#097479",
                "baseColor": "#097479",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": false
            },
            "customTheme": {
                "name": "Untitled Theme 1",
                "default": "#4B7930",
                "baseColor": "#4B7930",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
            },
            "themeState": {
                "base-color": {
                    "default": "#0094CE",
                    "value": "#0094CE",
                    "edited": false
                },
                "page-titlebar-backgroundColor": {
                    "value": "#0094CE",
                    "edited": false
                },
                "page-backgroundColor": {
                    "value": "#fafafa",
                    "edited": false
                },
                "page-sidebar-backgroundColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "group-textColor": {
                    "value": "#1bbfff",
                    "edited": false
                },
                "group-borderColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "group-backgroundColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "widget-textColor": {
                    "value": "#111111",
                    "edited": false
                },
                "widget-backgroundColor": {
                    "value": "#0094ce",
                    "edited": false
                },
                "widget-borderColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "base-font": {
                    "value": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
                }
            },
            "angularTheme": {
                "primary": "indigo",
                "accents": "blue",
                "warn": "red",
                "background": "grey",
                "palette": "light"
            }
        },
        "site": {
            "name": "Node-RED Dashboard",
            "hideToolbar": "false",
            "allowSwipe": "false",
            "lockMenu": "false",
            "allowTempTheme": "true",
            "dateFormat": "DD/MM/YYYY",
            "sizes": {
                "sx": 48,
                "sy": 48,
                "gx": 6,
                "gy": 6,
                "cx": 6,
                "cy": 6,
                "px": 0,
                "py": 0
            }
        }
    },
    {
        "id": "6f5bd214f28fa1fd",
        "type": "websocket in",
        "z": "4bd885d3fe93cdd6",
        "name": "",
        "server": "872c6787997b744b",
        "client": "",
        "x": 120,
        "y": 240,
        "wires": [
            [
                "ec8becde3001d83d"
            ]
        ]
    },
    {
        "id": "219f6d6991c12725",
        "type": "function",
        "z": "4bd885d3fe93cdd6",
        "name": "split values",
        "func": "const data = msg.payload;\n\nglobal.set(\"latest_sensor_data\", {\n    x: data.x,\n    y: data.y,\n    z: data.z\n});\n\nreturn [\n    { payload: data.x, topic: 'x' },\n    { payload: data.y, topic: 'y' },\n    { payload: data.z, topic: 'z' }\n];\n",
        "outputs": 3,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 570,
        "y": 180,
        "wires": [
            [
                "283079b835155e47",
                "24eea21858629491"
            ],
            [
                "283079b835155e47",
                "43997daaa35fbb56"
            ],
            [
                "283079b835155e47",
                "146c5175825ffcb5"
            ]
        ]
    },
    {
        "id": "623b6a4b086a536f",
        "type": "file",
        "z": "4bd885d3fe93cdd6",
        "name": "",
        "filename": "/data/position/test.jsonl",
        "filenameType": "str",
        "appendNewline": true,
        "createDir": true,
        "overwriteFile": "false",
        "encoding": "none",
        "x": 800,
        "y": 400,
        "wires": [
            []
        ]
    },
    {
        "id": "8a32328c.6a20a8",
        "type": "json",
        "z": "4bd885d3fe93cdd6",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": true,
        "x": 730,
        "y": 480,
        "wires": [
            []
        ]
    },
    {
        "id": "22f14ad0.516cb6",
        "type": "debug",
        "z": "4bd885d3fe93cdd6",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 592,
        "y": 1075,
        "wires": []
    },
    {
        "id": "211ef2bc.c51be6",
        "type": "file in",
        "z": "4bd885d3fe93cdd6",
        "name": "",
        "filename": "",
        "format": "lines",
        "chunk": false,
        "sendError": false,
        "x": 319,
        "y": 1059,
        "wires": [
            [
                "22f14ad0.516cb6"
            ]
        ]
    },
    {
        "id": "c1829945.5cab08",
        "type": "inject",
        "z": "4bd885d3fe93cdd6",
        "name": "",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 262,
        "y": 959,
        "wires": [
            [
                "801f85b2.8b5a08"
            ]
        ]
    },
    {
        "id": "801f85b2.8b5a08",
        "type": "function",
        "z": "4bd885d3fe93cdd6",
        "name": "",
        "func": "msg.filename=\"/home/pi/logs/sensors.txt\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 415,
        "y": 954,
        "wires": [
            [
                "211ef2bc.c51be6"
            ]
        ]
    },
    {
        "id": "283079b835155e47",
        "type": "join",
        "z": "4bd885d3fe93cdd6",
        "name": "",
        "mode": "custom",
        "build": "string",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "useparts": false,
        "accumulate": false,
        "timeout": "",
        "count": "",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "num",
        "reduceFixup": "",
        "x": 790,
        "y": 60,
        "wires": [
            []
        ]
    },
    {
        "id": "d80190a34b5d283c",
        "type": "switch",
        "z": "4bd885d3fe93cdd6",
        "name": "",
        "property": "payload.type",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "sensor-data",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "save-request",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 410,
        "y": 240,
        "wires": [
            [
                "219f6d6991c12725"
            ],
            [
                "cf309bea703641ad"
            ]
        ]
    },
    {
        "id": "ec8becde3001d83d",
        "type": "json",
        "z": "4bd885d3fe93cdd6",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 290,
        "y": 240,
        "wires": [
            [
                "d80190a34b5d283c"
            ]
        ]
    },
    {
        "id": "cf806b5c775ed7b8",
        "type": "debug",
        "z": "4bd885d3fe93cdd6",
        "name": "debug 1",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 760,
        "y": 360,
        "wires": []
    },
    {
        "id": "cf309bea703641ad",
        "type": "function",
        "z": "4bd885d3fe93cdd6",
        "name": "function 1",
        "func": "var d = new Date();\nvar data = global.get(\"latest_sensor_data\");\n\nif (!data) {\n    node.warn(\"No sensor data available.\");\n    return null;\n}\n\nvar p = {\n    time: d.toISOString(),  // or just use d if you want full object\n    posX: data.x,\n    posY: data.y,\n    posZ: data.z\n};\n\nmsg.payload = JSON.stringify(p) + \"\\n\";  // write as JSON string\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 560,
        "y": 360,
        "wires": [
            [
                "cf806b5c775ed7b8",
                "8a32328c.6a20a8",
                "623b6a4b086a536f"
            ]
        ]
    },
    {
        "id": "24eea21858629491",
        "type": "ui_gauge",
        "z": "4bd885d3fe93cdd6",
        "name": "",
        "group": "a8650cc64c238153",
        "order": 1,
        "width": 3,
        "height": 3,
        "gtype": "compass",
        "title": "X",
        "label": "units",
        "format": "{{value}}",
        "min": "-180",
        "max": "180",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "diff": false,
        "className": "",
        "x": 830,
        "y": 180,
        "wires": []
    },
    {
        "id": "43997daaa35fbb56",
        "type": "ui_gauge",
        "z": "4bd885d3fe93cdd6",
        "name": "",
        "group": "a8650cc64c238153",
        "order": 2,
        "width": 3,
        "height": 3,
        "gtype": "compass",
        "title": "Y",
        "label": "units",
        "format": "{{value}}",
        "min": "-90",
        "max": "90",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "diff": false,
        "className": "",
        "x": 830,
        "y": 220,
        "wires": []
    },
    {
        "id": "146c5175825ffcb5",
        "type": "ui_gauge",
        "z": "4bd885d3fe93cdd6",
        "name": "",
        "group": "a8650cc64c238153",
        "order": 3,
        "width": 3,
        "height": 3,
        "gtype": "compass",
        "title": "Z",
        "label": "units",
        "format": "{{value}}",
        "min": 0,
        "max": "360",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "diff": false,
        "className": "",
        "x": 830,
        "y": 260,
        "wires": []
    }
]